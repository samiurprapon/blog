{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_vala.8b78530d.chunk.js","mappings":"8FAKA,SAASA,EAAKC,GACZA,EAAMC,UAAUF,KAAOC,EAAMC,UAAUC,OAAO,QAAS,CAErD,aAAc,CACZ,CAEEC,QAAS,kDACTC,OAAQ,CACNC,YAAa,OAGjB,CAEEF,QAAS,2BACTG,YAAY,EACZF,OAAQ,CACNC,YAAa,OAGjB,CAEEF,QACE,0EACFG,YAAY,EACZF,OAAQ,CACNC,YAAa,OAGjB,CAEEF,QACE,oFACFG,YAAY,EACZF,OAAQ,CACNC,YAAa,QAInBE,QACE,4kBACFC,SAAU,iBACVC,OACE,2EACFC,SACE,oEACFL,YAAa,gBACbM,SAAU,mBAEZX,EAAMC,UAAUW,aAAa,OAAQ,SAAU,CAC7C,aAAc,CACZT,QAAS,iBACTU,QAAQ,EACRC,MAAO,UAET,kBAAmB,CACjBX,QAAS,cACTU,QAAQ,EACRT,OAAQ,CACNW,cAAe,CACbZ,QAAS,8BACTC,OAAQ,CACNY,UAAW,CACTb,QAAS,aACTW,MAAO,eAETG,KAAMjB,EAAMC,UAAUF,OAG1BmB,OAAQ,cAIdlB,EAAMC,UAAUW,aAAa,OAAQ,UAAW,CAC9CO,MAAO,CACLhB,QACE,0FACFU,QAAQ,EACRT,OAAQ,CACN,eAAgB,CACdD,QAAS,4BACTG,YAAY,EACZQ,MAAO,iBACPV,OAAQJ,EAAMC,UAAUkB,OAE1B,kBAAmB,MACnB,cAAe,eAxFvBC,EAAOC,QAAUtB,EACjBA,EAAKuB,YAAc,OACnBvB,EAAKwB,QAAU","sources":["../node_modules/refractor/lang/vala.js"],"sourcesContent":["'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n"],"names":["vala","Prism","languages","extend","pattern","inside","punctuation","lookbehind","keyword","function","number","operator","constant","insertBefore","greedy","alias","interpolation","delimiter","rest","string","regex","module","exports","displayName","aliases"],"sourceRoot":""}