{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_dart.e81508f5.chunk.js","mappings":"6FAKA,SAASA,EAAKC,IACX,SAAWA,GACV,IAAIC,EAAW,CACb,2BACA,8WAEEC,EAAgB,uDACjBC,OACCC,EAAY,CACdC,QAASC,OAAOJ,EAAgB,gCAAgCC,QAChEI,YAAY,EACZC,OAAQ,CACNC,UAAW,CACTJ,QAAS,2CACTG,OAAQ,CACNE,YAAa,SAKrBV,EAAMW,UAAUZ,KAAOC,EAAMW,UAAUC,OAAO,QAAS,CACrDC,OAAQ,CACN,CACER,QAAS,wBACTS,QAAQ,GAEV,CACET,QAAS,qCACTS,QAAQ,IAGZ,aAAc,CACZV,EACA,CAGEC,QAASC,OACPJ,EAAgB,+BAA+BC,QAEjDI,YAAY,EACZC,OAAQJ,EAAUI,SAGtBO,QAASd,EACTe,SACE,mFAEJhB,EAAMW,UAAUM,aAAa,OAAQ,WAAY,CAC/CC,SAAU,CACRb,QAAS,OACTc,MAAO,YAGXnB,EAAMW,UAAUM,aAAa,OAAQ,aAAc,CACjDG,SAAU,CACRf,QACE,sEACFG,OAAQ,CACN,aAAcJ,EACdW,QAASd,EACTS,YAAa,YACbM,SAAU,YA5DjB,CAgEEhB,GApELqB,EAAOC,QAAUvB,EACjBA,EAAKwB,YAAc,OACnBxB,EAAKyB,QAAU","sources":["../node_modules/refractor/lang/dart.js"],"sourcesContent":["'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n          greedy: true\n        },\n        {\n          pattern: /r?([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'function', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n"],"names":["dart","Prism","keywords","packagePrefix","source","className","pattern","RegExp","lookbehind","inside","namespace","punctuation","languages","extend","string","greedy","keyword","operator","insertBefore","metadata","alias","generics","module","exports","displayName","aliases"],"sourceRoot":""}