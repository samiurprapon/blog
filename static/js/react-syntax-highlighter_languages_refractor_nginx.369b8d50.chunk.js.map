{"version":3,"sources":["../node_modules/refractor/lang/nginx.js"],"names":["nginx","Prism","variable","languages","comment","pattern","lookbehind","directive","greedy","inside","string","escape","alias","keyword","boolean","number","punctuation","module","exports","displayName","aliases"],"mappings":"gGAKA,SAASA,EAAMC,IACZ,SAAWA,GACV,IAAIC,EACF,gEACFD,EAAME,UAAUH,MAAQ,CACtBI,QAAS,CACPC,QAAS,iBACTC,YAAY,GAEdC,UAAW,CACTF,QACE,0GACFC,YAAY,EACZE,QAAQ,EACRC,OAAQ,CACNC,OAAQ,CACNL,QACE,gEACFC,YAAY,EACZG,OAAQ,CACNE,OAAQ,CACNN,QAAS,cACTO,MAAO,UAETV,SAAUA,IAGdE,QAAS,CACPC,QAAS,UACTC,YAAY,EACZE,QAAQ,GAEVK,QAAS,CACPR,QAAS,OACTG,QAAQ,GAGVM,QAAS,CACPT,QAAS,uBACTC,YAAY,GAEdS,OAAQ,CACNV,QAAS,uBACTC,YAAY,GAEdJ,SAAUA,IAGdc,YAAa,SA/ChB,CAiDEf,GArDLgB,EAAOC,QAAUlB,EACjBA,EAAMmB,YAAc,QACpBnB,EAAMoB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_nginx.369b8d50.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n"],"sourceRoot":""}