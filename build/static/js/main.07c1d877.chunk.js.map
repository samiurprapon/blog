{"version":3,"sources":["contexts/StyleContext.js","components/ToggleSwitch/ToggleSwitch.js","components/header/Header.js","components/footer/Footer.js","containers/loading/Loading.js","containers/profile/Profile.js","containers/topbutton/Top.js","containers/Main.js","App.js","index.js"],"names":["StyleContext","React","createContext","StyleProvider","Provider","Consumer","ToggleSwitch","useState","isChecked","setChecked","styleContext","useContext","className","type","checked","onChange","changeTheme","Header","isDark","href","id","htmlFor","style","color","Footer","bottom","duration","distance","emoji","Loading","GithubProfile","lazy","Profile","prof","setrepo","useEffect","name","bio","avatarUrl","location","fallback","Top","scrollFunction","document","body","scrollTop","documentElement","getElementById","visibility","window","onscroll","onload","onClick","title","aria-hidden","Main","props","setState","state","darkPref","matchMedia","this","matches","value","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.07c1d877.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst StyleContext = React.createContext();\r\n\r\nexport const StyleProvider = StyleContext.Provider;\r\nexport const StyleConsumer = StyleContext.Consumer;\r\n\r\nexport default StyleContext;\r\n","import React, { useState, useContext } from \"react\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.css\";\nconst ToggleSwitch = () => {\n  const [isChecked, setChecked] = useState(false);\n  const styleContext = useContext(StyleContext);\n\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={() => {\n          styleContext.changeTheme();\n          setChecked(!isChecked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n};\nexport default ToggleSwitch;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from \"react\";\r\nimport Headroom from \"react-headroom\";\r\nimport \"./Header.css\";\r\nimport ToggleSwitch from \"../ToggleSwitch/ToggleSwitch\";\r\nimport StyleContext from \"../../contexts/StyleContext\";\r\n\r\nfunction Header() {\r\n  const { isDark } = useContext(StyleContext);\r\n\r\n  return (\r\n    <Headroom>\r\n      <header className={isDark ? \"dark-menu header\" : \"header\"}>\r\n        <a href=\"http://samiurprapon.github.io\" className={isDark ? \"dark-menu logo\" : \"logo\"}>\r\n          <span className=\"grey-color\"> &lt;</span>\r\n          <span className=\"logo-name\">{\"SamiurPrapon\"}</span>\r\n          <span className=\"grey-color\">/&gt;</span>\r\n        </a>\r\n        <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n        <label\r\n          className=\"menu-icon\"\r\n          htmlFor=\"menu-btn\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          <span className={isDark ? \"navicon navicon-dark\" : \"navicon\"}></span>\r\n        </label>\r\n        <ul className={isDark ? \"dark-menu menu\" : \"menu\"}>\r\n          <li>\r\n            <a href=\"/blog\">Home</a>\r\n          </li>\r\n          {(\r\n            <li>\r\n              <a href=\"#philosophy\">Philosophy</a>\r\n            </li>\r\n          )}\r\n          {(\r\n            <li>\r\n              <a href=\"#learning\">Programmings</a>\r\n            </li>\r\n          )}\r\n          {(\r\n            <li>\r\n              <a href=\"#projects\">Projects</a>\r\n            </li>\r\n          )}\r\n          {(\r\n            <li>\r\n              <a href=\"#tools\">Tools</a>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <a>\r\n              <ToggleSwitch />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    </Headroom>\r\n  );\r\n}\r\nexport default Header;","import React, { useContext } from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Fade } from \"react-reveal\";\r\nimport emoji from \"react-easy-emoji\";\r\nimport StyleContext from \"../../contexts/StyleContext\";\r\n\r\nexport default function Footer() {\r\n  const { isDark } = useContext(StyleContext);\r\n  return (\r\n    <Fade bottom duration={1000} distance=\"5px\">\r\n      <div className=\"footer-div\">\r\n        <p className={isDark ? \"dark-mode footer-text\" : \"footer-text\"}>\r\n          {emoji(\"Made with ❤️ by Samiur Prapon\")}\r\n        </p>\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"centerContent\">\r\n      <div className=\"sk-circle\">\r\n        <div className=\"sk-circle1 sk-child\"></div>\r\n        <div className=\"sk-circle2 sk-child\"></div>\r\n        <div className=\"sk-circle3 sk-child\"></div>\r\n        <div className=\"sk-circle4 sk-child\"></div>\r\n        <div className=\"sk-circle5 sk-child\"></div>\r\n        <div className=\"sk-circle6 sk-child\"></div>\r\n        <div className=\"sk-circle7 sk-child\"></div>\r\n        <div className=\"sk-circle8 sk-child\"></div>\r\n        <div className=\"sk-circle9 sk-child\"></div>\r\n        <div className=\"sk-circle10 sk-child\"></div>\r\n        <div className=\"sk-circle11 sk-child\"></div>\r\n        <div className=\"sk-circle12 sk-child\"></div>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nconst renderLoader = () => <Loading />;\r\nconst GithubProfile = lazy(() =>\r\n  import(\"../../components/githubProfile/GithubProfile\")\r\n);\r\n\r\nexport default function Profile() {\r\n  const [prof, setrepo] = useState([]);\r\n\r\n  function setProfileFunction(array) {\r\n    setrepo(array);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getProfileData = () => {\r\n      let result = {\r\n        data: {\r\n          user: {\r\n            name: \"Samiur Prapon\",\r\n            bio: \"♦️ World is Diamond Shaped.\",\r\n            avatarUrl:\r\n              \"https://avatars.githubusercontent.com/u/25266703\",\r\n            location: \"Bangladesh\",\r\n          },\r\n        },\r\n      };\r\n\r\n      setProfileFunction(result.data.user);\r\n    };\r\n\r\n    getProfileData();\r\n  }, []);\r\n\r\n  return (\r\n    <Suspense fallback={renderLoader()}>\r\n      <GithubProfile prof={prof} key={prof.id} />\r\n    </Suspense>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Top.css\";\r\n\r\nexport default function Top() {\r\n  function TopEvent() {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n  // When the user scrolls down 20px from the top of the document, show the button\r\n  function scrollFunction() {\r\n    if (\r\n      document.body.scrollTop > 20 ||\r\n      document.documentElement.scrollTop > 20\r\n    ) {\r\n      document.getElementById(\"topButton\").style.visibility = \"visible\";\r\n    } else {\r\n      document.getElementById(\"topButton\").style.visibility = \"hidden\";\r\n    }\r\n  }\r\n  window.onscroll = function () {\r\n    scrollFunction();\r\n  };\r\n  window.onload = function () {\r\n    scrollFunction();\r\n  }; //To make sure that this button is not visible at starting.\r\n  // When the user clicks on the button, scroll to the top of the document\r\n  return (\r\n    <button onClick={TopEvent} id=\"topButton\" title=\"Go to top\">\r\n      <i className=\"fas fa-hand-point-up\" aria-hidden=\"true\"></i>\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Footer from \"../components/footer/Footer\";\nimport Profile from \"./profile/Profile\";\nimport Top from \"./topbutton/Top\";\nimport { StyleProvider } from \"../contexts/StyleContext\";\nimport \"./Main.css\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDark: false,\n    };\n  }\n\n  componentDidMount() {\n    const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    this.setState({ isDark: darkPref.matches });\n  }\n  changeTheme = () => {\n    this.setState({ isDark: !this.state.isDark });\n  };\n\n  render() {\n    return (\n      <div className={this.state.isDark ? \"dark-mode\" : null}>\n        <StyleProvider\n          value={{ isDark: this.state.isDark, changeTheme: this.changeTheme }}\n        >\n          {/* rest codes will be here */}\n          <Header />\n          <Profile />\n          <Footer />\n          <Top />\n        </StyleProvider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}