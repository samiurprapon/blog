{"version":3,"sources":["contexts/StyleContext.js","components/ToggleSwitch/ToggleSwitch.js","components/header/Header.js","containers/Main.js","App.js","index.js"],"names":["StyleContext","React","createContext","StyleProvider","Provider","Consumer","ToggleSwitch","useState","isChecked","setChecked","styleContext","useContext","className","type","checked","onChange","changeTheme","Header","isDark","href","id","htmlFor","style","color","Main","props","setState","state","darkPref","window","matchMedia","this","matches","value","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0TAEMA,EAAeC,IAAMC,gBAEdC,EAAgBH,EAAaI,SAG3BJ,GAFcA,EAAaK,SAE3BL,G,eCcAM,EAlBM,WAAO,IAAD,EACOC,oBAAS,GADhB,mBAClBC,EADkB,KACPC,EADO,KAEnBC,EAAeC,qBAAWX,GAEhC,OACE,wBAAOY,UAAU,SAAjB,UACE,uBACEC,KAAK,WACLC,QAASN,EACTO,SAAU,WACRL,EAAaM,cACbP,GAAYD,MAGhB,sBAAMI,UAAU,qBC0CPK,MArDf,WAAmB,IACTC,EAAWP,qBAAWX,GAAtBkB,OAER,OACE,cAAC,IAAD,UACE,yBAAQN,UAAWM,EAAS,mBAAqB,SAAjD,UACE,oBAAGC,KAAK,gCAAgCP,UAAU,OAAlD,UACE,sBAAMA,UAAU,aAAhB,gBACA,sBAAMA,UAAU,YAAhB,SAA6B,iBAC7B,sBAAMA,UAAU,aAAhB,mBAEF,uBAAOA,UAAU,WAAWC,KAAK,WAAWO,GAAG,aAC/C,uBACER,UAAU,YACVS,QAAQ,WACRC,MAAO,CAAEC,MAAO,SAHlB,SAKE,sBAAMX,UAAWM,EAAS,uBAAyB,cAErD,qBAAIN,UAAWM,EAAS,iBAAmB,OAA3C,UACE,6BACE,mBAAGC,KAAK,IAAR,oBAGA,6BACE,mBAAGA,KAAK,cAAR,0BAIF,6BACE,mBAAGA,KAAK,YAAR,4BAIF,6BACE,mBAAGA,KAAK,YAAR,wBAIF,6BACE,mBAAGA,KAAK,SAAR,qBAGJ,6BACE,4BACE,cAAC,EAAD,iBC9COK,G,wDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURT,YAAc,WACZ,EAAKU,SAAS,CAAER,QAAS,EAAKS,MAAMT,UAVpC,EAAKS,MAAQ,CACXT,QAAQ,GAHO,E,qDAOnB,WACE,IAAMU,EAAWC,OAAOC,WAAW,gCACnCC,KAAKL,SAAS,CAAER,OAAQU,EAASI,Y,oBAMnC,WACE,OACE,qBAAKpB,UAAWmB,KAAKJ,MAAMT,OAAS,YAAc,KAAlD,SACE,cAACf,EAAD,CACE8B,MAAO,CAAEf,OAAQa,KAAKJ,MAAMT,OAAQF,YAAae,KAAKf,aADxD,SAGE,cAAC,EAAD,Y,GAtBwBkB,cCOnBC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ad406e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst StyleContext = React.createContext();\r\n\r\nexport const StyleProvider = StyleContext.Provider;\r\nexport const StyleConsumer = StyleContext.Consumer;\r\n\r\nexport default StyleContext;\r\n","import React, { useState, useContext } from \"react\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.css\";\nconst ToggleSwitch = () => {\n  const [isChecked, setChecked] = useState(false);\n  const styleContext = useContext(StyleContext);\n\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={() => {\n          styleContext.changeTheme();\n          setChecked(!isChecked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n};\nexport default ToggleSwitch;\n","import React, { useContext } from \"react\";\r\nimport Headroom from \"react-headroom\";\r\nimport \"./Header.css\";\r\nimport ToggleSwitch from \"../ToggleSwitch/ToggleSwitch\";\r\nimport StyleContext from \"../../contexts/StyleContext\";\r\n\r\nfunction Header() {\r\n  const { isDark } = useContext(StyleContext);\r\n\r\n  return (\r\n    <Headroom>\r\n      <header className={isDark ? \"dark-menu header\" : \"header\"}>\r\n        <a href=\"http://samiurprapon.github.io\" className=\"logo\">\r\n          <span className=\"grey-color\"> &lt;</span>\r\n          <span className=\"logo-name\">{\"SamiurPrapon\"}</span>\r\n          <span className=\"grey-color\">/&gt;</span>\r\n        </a>\r\n        <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n        <label\r\n          className=\"menu-icon\"\r\n          htmlFor=\"menu-btn\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          <span className={isDark ? \"navicon navicon-dark\" : \"navicon\"}></span>\r\n        </label>\r\n        <ul className={isDark ? \"dark-menu menu\" : \"menu\"}>\r\n          <li>\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n          {(\r\n            <li>\r\n              <a href=\"#philosophy\">Philosophy</a>\r\n            </li>\r\n          )}\r\n          {(\r\n            <li>\r\n              <a href=\"#learning\">Programmings</a>\r\n            </li>\r\n          )}\r\n          {(\r\n            <li>\r\n              <a href=\"#projects\">Projects</a>\r\n            </li>\r\n          )}\r\n          {(\r\n            <li>\r\n              <a href=\"#tools\">Tools</a>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <a>\r\n              <ToggleSwitch />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    </Headroom>\r\n  );\r\n}\r\nexport default Header;","import React, { Component } from \"react\";\nimport Header from \"../components/header/Header\";\nimport { StyleProvider } from \"../contexts/StyleContext\";\nimport \"./Main.css\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDark: false,\n    };\n  }\n\n  componentDidMount() {\n    const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    this.setState({ isDark: darkPref.matches });\n  }\n  changeTheme = () => {\n    this.setState({ isDark: !this.state.isDark });\n  };\n\n  render() {\n    return (\n      <div className={this.state.isDark ? \"dark-mode\" : null}>\n        <StyleProvider\n          value={{ isDark: this.state.isDark, changeTheme: this.changeTheme }}\n        >\n          <Header />\n        </StyleProvider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}